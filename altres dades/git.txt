git config --global user.name "JMT"
git config --global user.email "josepmtapia@gmail.com"
git config --list
git status -s
git add nombre_archivo
git log

para ver los directorios remotos
git remote -v 

no global , para porjecte concret
git config user.email "josepmtapia@gmail.com"




https://gist.github.com/cgonzalezdai/cc33db72a6fe5178637aabb562eae35c

git init

git add .

git commit -m "first commit"

git remote add origin https://github.com/NOMBRE_USUARIO/NOMBRE_PROYECTO.git

git push -u origin master

**********************git c
mirem les dues últimes entrades
$ git log -p -2

per veure sols la info linea a linea

git log --oneline --graph

***********************
para bajar los cambios
git pullgit 
***********

$ git status -s
 M README
MM Rakefile
A  lib/git.rb
M  lib/simplegit.rb
?? LICENSE.txt

Los archivos nuevos que no están rastreados tienen un ?? a su lado, los archivos que están preparados tienen una A y los modificados una M. El estado aparece en dos columnas - la columna de la izquierda indica el estado preparado y la columna de la derecha indica el estado sin preparar. Por ejemplo, en esa salida, el archivo README está modificado en el directorio de trabajo pero no está preparado, mientras que lib/simplegit.rb está modificado y preparado. El archivo Rakefile fue modificado, preparado y modificado otra vez por lo que existen cambios preparados y sin preparar.
************
Añadiendo la opción -a al comando git commit harás que Git prepare automáticamente todos los archivos rastreados antes de confirmarlos, ahorrándote el paso de git add: 
git commit -a -m "comentari"

******************
git checkout primeros 5 o 6 digitos
git checkout master

******************
per clonar un repositori remot en local (compte amb el default branch)
https://www.jcchouinard.com/clone-github-repository-on-windows/


*****************
interessant diseny
https://refactoring.guru/es/design-patterns/classification

**********************
C:\xampp\php>php -S localhost:8001
******

para borrar todas las carpetas de forma responsive
rm -rf 


